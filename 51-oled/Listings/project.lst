C51 COMPILER V9.57.0.0   PROJECT                                                           07/15/2020 21:48:16 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE PROJECT
OBJECT MODULE PLACED IN .\hex\project.obj
COMPILER INVOKED BY: H:\KEIL5-C51\C51\BIN\C51.EXE project.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\project.lst) OBJECT(.\hex\project.obj)

line level    source

   1          #include "reg51.h"
   2          #include "character.h"
   3          sbit led=P2^0;
   4          sbit led_usart=P2^7;
   5          sbit SCL=P1^7;
   6          sbit SDA=P1^6;
   7          //unsigned char segment[][15];
   8          /**********I2C init**********i2c???????*/
   9          void I2cStart(void);
  10          void I2cStop(void);
  11          unsigned char I2cSendByte(unsigned char dat);
  12          void oled_Write_cmd(unsigned char cmd);
  13          void oled_Write_data(unsigned char dat);
  14          void oled_clear(void);
  15          /**********Oled Initialization configuration***********/
  16          void oled_initial(void);
  17          /**********Print characters and numbers************/
  18          /**********delay***********/
  19          void delay(unsigned char i);
  20          void delay_10us(unsigned int i);
  21          void delay_ms(unsigned int ms);
  22          //void UART_init(unsigned int baud_rate);
  23          void oled_setpos(unsigned char x,unsigned char y);
  24          void oled_showpictues(unsigned char x0,unsigned char y0,unsigned char x1,unsigned char y1,unsigned char BM
             -P[]);
  25          int main()
  26          {
  27   1              //UART_init(19200);
  28   1              oled_initial();
  29   1              //oled_showpictues(0,0,128,64,BMP_1);
  30   1              //oled_showpictues(0,0,128,64,BMP_2);
  31   1              //led_showpictues(0,0,128,64,BMP_3);
  32   1              //oled_showpictues(0,0,128,64,BMP_4);
  33   1              //oled_showpictues(0,0,128,64,BMP_5);
  34   1              oled_showpictues(0,0,64,64,pictures);
  35   1              while(1)
  36   1              {
  37   2              //oled_showpictues(0,0,64,64,pictures);
  38   2              oled_showpictues(64,0,128,64,pictures_1);
  39   2                      delay_ms(500);
  40   2              oled_showpictues(64,0,128,64,pictures_2);
  41   2                      delay_ms(500);
  42   2              led=0;
  43   2              }
  44   1      }
  45          /**********oled_init**********/
  46          void I2cStart(void)                       //i2c????
  47          {
  48   1              SDA=1;
  49   1              delay_10us(1);
  50   1              SCL=1;
  51   1              delay_10us(1);//?????SDA????>4.7us
  52   1              SDA=0;
  53   1              delay_10us(1);//?????>4us
C51 COMPILER V9.57.0.0   PROJECT                                                           07/15/2020 21:48:16 PAGE 2   

  54   1              SCL=0;                  
  55   1              delay_10us(1);          
  56   1      }
  57          /*stop*/
  58          void I2cStop(void)                                              //i2c????
  59          {
  60   1              SDA=0;
  61   1              delay_10us(1);
  62   1              SCL=1;
  63   1              delay_10us(1);//??????4.7us
  64   1              SDA=1;
  65   1              delay_10us(1);          
  66   1      }
  67          unsigned char I2cSendByte(unsigned char dat)            //??i2c?????????
  68          {
  69   1          unsigned char a=0,b=0;//??255,???????1us,????255us?         
  70   1              for(a=0;a<8;a++)//???8?,??????
  71   1              {
  72   2                      SDA=dat>>7;      //??????SCL=0,????????SDA??
  73   2                      dat=dat<<1;
  74   2                      delay_10us(1);
  75   2                      SCL=1;
  76   2                      delay_10us(1);//????>4.7us
  77   2                      SCL=0;
  78   2                      delay_10us(1);//????4us         
  79   2              }
  80   1              SDA=1;
  81   1              delay_10us(1);
  82   1              SCL=1;
  83   1              while(SDA)//????,?????????SDA??
  84   1              {
  85   2                      b++;
  86   2                      if(b>200)        //????2000us????????,??????,??????
  87   2                      {
  88   3                              SCL=0;
  89   3                              delay_10us(1);
  90   3                              return 0;
  91   3                      }
  92   2              }
  93   1              SCL=0;
  94   1              delay_10us(1);
  95   1              return 1;               
  96   1      }
  97          
  98          void oled_Write_cmd(unsigned char cmd)                  //????oled?????
  99          {
 100   1              I2cStart();
 101   1              I2cSendByte(0x78);//???????
 102   1              I2cSendByte(0x00);//?????????
 103   1              I2cSendByte(cmd);       //????
 104   1              I2cStop();
 105   1      }
 106          
 107          void oled_Write_data(unsigned char dat)                 //????oled?????
 108          {
 109   1              I2cStart();
 110   1              I2cSendByte(0x78);//???????
 111   1              I2cSendByte(0x40);//?????????
 112   1              I2cSendByte(dat);       //????
 113   1              I2cStop();
 114   1      }
 115          
C51 COMPILER V9.57.0.0   PROJECT                                                           07/15/2020 21:48:16 PAGE 3   

 116          void oled_clear(void)  //?????oled????          
 117          {       unsigned char i,j;
 118   1           
 119   1              oled_Write_cmd(0x20);
 120   1              oled_Write_cmd(0x02);
 121   1          for(i=0;i<8;i++)
 122   1              {
 123   2                      oled_Write_cmd(0xb0+i);
 124   2                      oled_Write_cmd(0x00);
 125   2                      oled_Write_cmd(0x10);
 126   2                      for(j=0;j<128;j++)
 127   2                      {
 128   3                         oled_Write_data(0x00); 
 129   3                      }
 130   2              }       
 131   1      }
 132          
 133          void oled_initial(void)//oled?????
 134          {
 135   1          delay(500);
 136   1                               
 137   1              oled_Write_cmd(0xae);//--turn off oled panel ????
 138   1          oled_Write_cmd(0x00);//---set low column address????????? 0x0x
 139   1          oled_Write_cmd(0x10);//---set high column address?????????0x1x
 140   1          oled_Write_cmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 141   1          oled_Write_cmd(0x81);//--set contrast control register?????
 142   1          oled_Write_cmd(0xff); // Set SEG Output Current Brightness????oxff
 143   1          oled_Write_cmd(0xa1);//--Set SEG/Column Mapping     0xa0???? 0xa1??
 144   1          oled_Write_cmd(0xc8);//Set COM/Row Scan Direction   0xc0???? 0xc8??
 145   1          oled_Write_cmd(0xa6);//--set normal display
 146   1          oled_Write_cmd(0xa8);//--set multiplex ratio(1 to 64)
 147   1          oled_Write_cmd(0x3f);//--1/64 duty
 148   1          oled_Write_cmd(0xd3);//-set display offset    Shift Mapping RAM Counter (0x00~0x3F)
 149   1          oled_Write_cmd(0x00);//-not offset
 150   1          oled_Write_cmd(0xd5);//--set display clock divide ratio/oscillator frequency
 151   1          oled_Write_cmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 152   1          oled_Write_cmd(0xd9);//--set pre-charge period
 153   1          oled_Write_cmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 154   1          oled_Write_cmd(0xda);//--set com pins hardware configuration
 155   1          oled_Write_cmd(0x12);
 156   1          oled_Write_cmd(0xdb);//--set vcomh
 157   1          oled_Write_cmd(0x40);//Set VCOM Deselect Level
 158   1          oled_Write_cmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)??????
 159   1                                                      //????,????,???
 160   1          oled_Write_cmd(0x02);//     ????????
 161   1          oled_Write_cmd(0x8d);//--set Charge Pump enable/disable
 162   1          oled_Write_cmd(0x14);//--set(0x10) disable
 163   1          oled_Write_cmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
 164   1          oled_Write_cmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
 165   1          oled_Write_cmd(0xaf);//--turn on oled panel????
 166   1      
 167   1              delay(100);
 168   1              oled_clear();//??
 169   1      }
 170          void oled_setpos(unsigned char x,unsigned char y)
 171          {
 172   1              oled_Write_cmd(0xb0+y);
 173   1              oled_Write_cmd((((x+2)&0xf0)>>4)|0x10);
 174   1              oled_Write_cmd(((x+2)&0x0f));
 175   1      }
 176          void oled_showpictues(unsigned char x0,unsigned char y0,unsigned char x1,unsigned char y1,unsigned char BM
             -P[])
C51 COMPILER V9.57.0.0   PROJECT                                                           07/15/2020 21:48:16 PAGE 4   

 177          {
 178   1              unsigned int i=0;
 179   1              unsigned char x,y;
 180   1              //if(y1%8==0) y=y1/8;
 181   1              //else y=y1/8+1;
 182   1              y1/=8;
 183   1              for(y=y0;y<y1;y++)
 184   1              {
 185   2                      oled_setpos(x0,y);
 186   2                      for(x=x0;x<x1;x++)
 187   2                  {oled_Write_data(BMP[i++]);}
 188   2              }
 189   1      }
 190          /**********dealy*********/
 191          void delay(unsigned char i)                                                                                                             //????
 192          {
 193   1          while(i--);
 194   1      }
 195          void delay_10us(unsigned int i)
 196          { 
 197   1              unsigned char a,b,c;
 198   1              for(c=0;c<i;c++)
 199   1              {
 200   2                      for(b=1;b>0;b--)
 201   2                      {
 202   3                              for(a=2;a>0;a--);
 203   3                      }
 204   2              }
 205   1      }
 206          /********************/
 207          /*void UART_init(unsigned int baud_rate)
 208          {
 209                  EA=1;
 210                  PCON=0x80;
 211                  SCON=0x50;
 212                  TMOD=0x20;
 213                  switch(baud_rate)
 214                  {
 215                          case 1200:TH1=0xD0;TL1=0xD0;break;
 216                          case 2400:TH1=0xE8;TL1=0xE8;break;
 217                          case 4800:TH1=0xF4;TL1=0xF4;break;
 218                          case 9600:TH1=0xFA;TL1=0xFA;break;
 219                          case 19200:TH1=0xFD;TL1=0xFD;break;
 220                  }
 221                  TR1=1;//?????1
 222          }*/
 223          /*void UART_interrupt() interrupt 4
 224          {
 225                  unsigned char i;
 226                  static unsigned char Row=0;
 227                  static unsigned char Column=0;
 228                  static unsigned char receive_data[16];
 229                  if(RI==1)
 230                  {
 231                          receive_data[Column]=SBUF;
 232                          ++Column;
 233                          if(Column==16)
 234                          {
 235                                  Column=0;
 236                                  for(i=0;i<16;++i) segment[Row][i]=receive_data[i];
 237                          }
 238                          Row++;
C51 COMPILER V9.57.0.0   PROJECT                                                           07/15/2020 21:48:16 PAGE 5   

 239                          if(Row==64)
 240                          RI=0;
 241                  }
 242                  led_usart=~led_usart;
 243          }*/
 244          void delay_ms(unsigned int ms)                
 245          {
 246   1              unsigned int i,j;
 247   1              for(j=0;j<ms;j++)
 248   1                      for(i=0;i<1000;i++);
 249   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    636    ----
   CONSTANT SIZE    =   6656    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
